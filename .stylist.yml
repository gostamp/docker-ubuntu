processors:
  - name: actionlint
    includes:
      - ".github/workflows/*.{yml,yaml}"
    check:
      command: actionlint --format '{{json .}}'
      input: variadic
      output: stdout
      format: json
      mapping:
        level: "error"
        path: "{{ .filepath }}"
        start_line: "{{ .line }}"
        start_column: "{{ .column }}"
        end_line: "{{ .line }}"
        end_column: "{{ .end_column }}"
        rule_id: "{{ .kind }}"
        rule_name: "{{ .kind }}"
        rule_description: "{{ .message }}"

  - name: pin-github-action
    includes:
      - ".github/workflows/*.{yml,yaml}"
    fix:
      command: pin-github-action
      input: variadic
      output: stdout
      format: none

  - preset: cspell
    # name: cspell
    # includes:
    #   - '**/*'
    # check:
    #   command: cspell --cache --dot --no-must-find-files --relative --show-suggestions --no-progress --no-summary .
    #   input: none
    #   output: stdout
    #   format: regexp
    #   mapping:
    #     pattern: (?P<file>.*):(?P<line>\d+):(?P<column>\d+)\s-\s(?P<message>.*)
    #     level: error
    #     path: '{{ trimPrefix "./" .file }}'
    #     start_line: '{{ .line }}'
    #     start_column: '{{ .column }}'
    #     rule_id: spelling
    #     rule_name: spelling
    #     rule_description: '{{ .message }}'
  - preset: gitleaks
    # name: gitleaks
    # includes:
    #   - '**/*'
    # check:
    #   command: gitleaks detect --no-banner --no-git --redact --verbose
    #   input: none
    #   output: stdout
    #   format: regexp
    #   mapping:
    #     pattern: (?m)Secret:\s+(?P<secret>.*)\nRuleID:\s+(?P<rule_id>.*)\nEntropy:\s+(?P<entropy>.*)\nFile:\s+(?P<file>.*)\nLine:\s+(?P<line>.*)
    #     level: error
    #     path: '{{ .file }}'
    #     start_line: '{{ .line }}'
    #     rule_id: '{{ .rule_id }}'
    #     rule_name: '{{ .rule_id }}'
    #     rule_description: Secret detected
  - preset: hadolint
    # name: hadolint
    # includes:
    #   - '**/Dockerfile'
    # check:
    #   command: hadolint --format=json --no-color
    #   input: variadic
    #   output: stdout
    #   format: json
    #   mapping:
    #     level: '{{ .level }}'
    #     path: '{{ .file }}'
    #     start_line: '{{ .line }}'
    #     start_column: '{{ .column }}'
    #     rule_id: '{{ .code }}'
    #     rule_name: '{{ .code }}'
    #     rule_description: '{{ .message }}'
    #     rule_uri: '{{ if hasPrefix "SC" .code }}https://www.shellcheck.net/wiki/{{ .code }}{{ else }}https://github.com/hadolint/hadolint/wiki/{{ .code }}{{ end }}'
  - preset: markdownlint
    # name: markdownlint
    # includes:
    #   - '**/*.md'
    # check:
    #   command: markdownlint --json
    #   input: variadic
    #   output: stderr
    #   format: json
    #   mapping:
    #     level: error
    #     path: '{{ .fileName }}'
    #     start_line: '{{ .lineNumber }}'
    #     start_column: '{{ if .errorRange }}{{ index .errorRange 0 }}{{ end }}'
    #     end_line: '{{ .lineNumber }}'
    #     end_column: '{{ if .errorRange }}{{ add (index .errorRange 0) (index .errorRange 1) }}{{ end }}'
    #     rule_id: '{{ index .ruleNames 0 }}'
    #     rule_name: '{{ index .ruleNames 1 }}'
    #     rule_description: '{{ .ruleDescription }}'
    #     rule_uri: '{{ .ruleInformation }}'
    # fix:
    #   command: markdownlint --fix
    #   input: variadic
    #   output: stderr
    #   format: none
  - preset: shellcheck
    # name: shellcheck
    # includes:
    #   - '**/*.{bash,sh,shell}'
    # check:
    #   command: shellcheck --check-sourced --color=never --format=json --source-path=SOURCEPATHS --external-sources
    #   input: variadic
    #   output: stdout
    #   format: json
    #   mapping:
    #     level: '{{ .level }}'
    #     path: '{{ .file }}'
    #     start_line: '{{ .line }}'
    #     start_column: '{{ .column }}'
    #     end_line: '{{ .endLine }}'
    #     end_column: '{{ .endColumn }}'
    #     rule_id: SC{{ .code }}
    #     rule_name: SC{{ .code }}
    #     rule_description: '{{ .message }}'
    #     rule_uri: https://www.shellcheck.net/wiki/SC{{ .code }}
  - preset: shfmt
    # name: shfmt
    # includes:
    #   - '**/*.{bash,sh,shell}'
    # check:
    #   command: shfmt --diff
    #   input: variadic
    #   output: stdout
    #   format: diff
    # fix:
    #   command: shfmt --write
    #   input: variadic
    #   output: stdout
    #   format: none
