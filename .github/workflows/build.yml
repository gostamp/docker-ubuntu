name: build

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/gostamp/ubuntu-full
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      next_version: ${{ steps.version.outputs.next_version }}

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v2.4.1

      - name: Build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pin@v4.0.0
        with:
          load: true
          build-args: |
            APP_TARGET=full
          context: .
          cache-from: |
            type=gha
            type=registry,ref=${{ env.IMAGE_NAME }}:latest
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: |
            type=gha
          tags: ${{ env.IMAGE_NAME }}:latest
          target: full

      # cspell: words ghaction
      - name: Import SOPS GPG key
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # pin@v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY_SOPS }}

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Calculate next version
        if: github.ref_name == 'main'
        id: version
        run: make version

  release:
    runs-on: ubuntu-latest

    needs: build
    if: github.ref_name == 'main' && needs.build.outputs.next_version != ''

    env:
      VERSION: ${{ needs.build.outputs.next_version }}

    permissions:
      contents: write # to create releases
      packages: write

    steps:
      - name: Debug
        run: echo VERSION '${{ env.VERSION }}' && sleep 10

      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v2.4.1

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # pin@v4.3.0
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,value=${{ env.VERSION }},pattern={{version}}
            type=semver,value=${{ env.VERSION }},pattern={{major}}.{{minor}}

      - name: Log in to the container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pin@v4.0.0
        with:
          push: true
          build-args: |
            APP_TARGET=full
            BUILDKIT_MULTI_PLATFORM=1
          context: .
          cache-from: |
            type=registry,ref=${{ env.IMAGE_NAME }}:latest
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          target: full

      - name: Create release
        run: gh release create '${{ env.VERSION }}' --generate-notes
